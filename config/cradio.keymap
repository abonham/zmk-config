/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define DEFAULT     0
#define WINDOWS     1
#define SYMBOLS     2
#define NUMBERS     3
#define FUNCTIONS   4
#define DANGER      5
#define GAME        6

&mt {
  flavor = "tap-preferred";
  tapping_term_ms = <200>;
  quick-tap-ms = <175>;
};

&caps_word {
    continue-list = <UNDERSCORE MINUS BKSP>;
};

/ {

    combos {
        compatible = "zmk,combos";
        combo_gui {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp LGUI>;
        };

        combo_minus {
            timeout-ms = <33>;
            key-positions = <6 9>;
            bindings = <&kp MINUS>;
        };

        combo_equal {
            timeout-ms = <33>;
            key-positions = <7 9>;
            bindings = <&kp EQL>;
        };

        combo_backslash {
            timeout-ms = <33>;
            key-positions = <8 9>;
            bindings = <&kp BSLH>;
        };

        combo_semicolon {
            timeout-ms = <50>;
            key-positions = <18 19>;
            bindings = <&kp SCLN>;
        };

        combo_cap_word {
            timeout-ms = <50>;
            key-positions = <10 19>;
            bindings = <&caps_word>;
        };

        combo_windows {
            timeout-ms = <75>;
            key-positions = <0 9>;
            bindings = <&tog WINDOWS>;
        };

        combo_game {
            timeout-ms = <75>;
            key-positions = <0 8>;
            bindings = <&tog GAME>;
        };
    };

    behaviors {
        td0: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_0";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&reset>, <&bootloader>;
        };

        td1: tap_dance_0 {
            compatible = "zmk,behavior-tap-dance";
            label = "TAP_DANCE_1";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp BKSP>, <&kp RGUI>;
        };
        
        graq: grave_replace {
            compatible = "zmk,behavior-mod-morph";
            label = "GRAVE_REPLACE";
            #binding-cells = <0>;
            bindings = <&kp Q>, <&kp GRAVE>;
            mods = <(MOD_LGUI)>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &graq &kp W &kp E &kp R &kp T 						                &kp Y &kp U &kp I &kp O &kp P
                &mt LSFT A &kp S &kp D &kp F &kp G 			                        &kp H &kp J &kp K &kp L &mt RSFT SQT
                &mt LS(LGUI) Z &mt LCTL X &mt LALT C &kp V &kp B	                &kp N &kp M &mt RALT CMMA &mt RCTL DOT &mt LA(LC(LGUI)) FSLH
                &lt SYMBOLS ESC &mt LGUI SPC  				                        &mt RGUI BKSP &lt NUMBERS RET
            >;
        };

        windows_layer {
            bindings = <
                &kp Q &kp W &kp E &kp R &kp T 						                &kp Y &kp U &kp I &kp O &kp P
                &kp A &kp S &kp D &kp F &kp G 			                            &kp H &kp J &kp K &kp L &mt RSFT SQT
                &mt LSFT Z &mt LCTL X &mt LALT C &kp V &mt LGUI B	                &kp N &kp M &mt RALT CMMA &mt RCTL DOT &kp FSLH
                &lt SYMBOLS ESC &kp SPC  				                            &mt LCTL BKSP &lt NUMBERS ENTER
            >;
        };

        symbols_layer {
            bindings = <
                &kp GRAVE  &kp ATSN &kp HASH &kp DLLR &kp PRCT                      &kp CRRT &kp AMPS &kp STAR &kp LPRN &kp RPRN
                &kp TAB &kp SQT &kp DQT &kp UNDER &kp PIPE                           &kp MINUS &kp EQL &kp PLUS &kp LBRC &kp RBRC
                &kp TILDE &kp FSLH &kp BSLH &kp QMARK &kp BANG 	                    &kp INS &kp MINUS &kp UNDER &kp LBKT &kp RBKT
                &none  &kp LGUI  					                                &mt RGUI DEL &mo FUNCTIONS
            >;
        };

        numbers_layer {
            bindings = <
                &kp NUM_1 &kp NUM_2 &kp NUM_3 &kp NUM_4 &kp NUM_5                   &kp NUM_6 &kp NUM_7 &kp NUM_8 &kp NUM_9 &kp NUM_0
                &kp TAB  &kp QMARK  &kp FSLH  &kp COLN  &kp SCLN 	                &kp LEFT &kp DOWN &kp UP  &kp RIGHT &kp UNDER
                &kp GRAVE  &kp KPLS &kp LBKT &kp RBKT   &kp BSLH                    &kp MINUS &kp KP_EQUAL &kp LBRC &kp RBRC &kp BKSP
                &mo FUNCTIONS &kp LGUI  	                                        &kp RGUI  &none
            >;
        };

        util_layer {
            bindings = <
                &kp PAGE_UP &kp C_VOLUME_UP &trans &trans &tog WINDOWS     		    &kp KPLS &kp NUM_7 &kp NUM_8 &kp NUM_9 &kp MINUS
                &kp PAGE_DOWN &kp C_VOLUME_DOWN &kp C_PLAY_PAUSE &kp F4 &kp F5      &kp NUM_0 &kp NUM_4  &kp NUM_5 &kp NUM_6 &kp DOT
                &trans &trans &trans &trans &tog GAME                               &trans &kp NUM_1  &kp NUM_2  &kp NUM_3 &kp KP_EQUAL
                &trans &trans  					                                    &mo DANGER &trans
            >;
        };

        dangerous_layer {
            bindings = <
                &reset &trans &bt BT_CLR &trans &bootloader        		            &reset &trans &trans &trans &bootloader
                &trans &trans &trans &trans &trans                                  &trans &trans &trans &trans &trans
                &BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &out OUT_BLE &out OUT_USB          &trans &trans &trans &trans &trans
                &trans &trans  					                                    &trans &trans
            >;
        };

        game_layer {
            bindings = <
                &kp ESC &kp Q &kp W &kp E &kp R                                     &kp T &kp U &kp U &kp I &kp BKSP
                &kp TAB &kp A &kp S &kp D &kp F                                     &kp G &kp H &kp J &kp K &kp ENTER
                &kp LSFT &kp Z &kp X &kp C &kp V 	                                &kp B &kp N &kp M &kp GRAVE &kp FSLH
                &kp LCTL &kp SPC  				                                    &kp SPC &kp LALT
            >;
        };
    };
};
